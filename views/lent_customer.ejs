<%- include('navbar.ejs') %>
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Lent Customer Management | Shourya Fashion Hub</title>
        <style>
            :root {
                --primary: #4f46e5;
                --primary-dark: #4338ca;
                --primary-light: #6366f1;
                --primary-50: #eef2ff;
                --secondary: #f9fafb;
                --text: #111827;
                --text-light: #6b7280;
                --border: #e5e7eb;
                --success: #10b981;
                --danger: #ef4444;
                --warning: #f59e0b;
                --info: #3b82f6;
                --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
                --card-shadow-hover: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            }

            body {
                font-family: 'Inter', sans-serif;
                background-color: #f3f4f6;
                color: var(--text);
            }

            .container-main {
                margin-left: 280px;
                padding: 20px;
                transition: all 0.3s;
            }

            .summary-card {
                border-radius: 10px;
                border-top: 4px solid var(--primary);
                transition: transform 0.3s;
            }

            .summary-card:hover {
                transform: translateY(-5px);
            }

            .customer-name {
                color: var(--primary-dark);
                font-weight: 600;
            }

            .badge-pill {
                border-radius: 50rem;
            }

            .action-btn {
                width: 35px;
                height: 35px;
                display: inline-flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
            }

            .table-responsive {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }

            .table {
                width: 100%;
                border-collapse: collapse;
                min-width: 800px;
            }

            .table th {
                background-color: #f9fafb;
                color: var(--text);
                font-weight: 600;
                text-align: left;
                padding: 14px 16px;
                border-bottom: 1px solid var(--border);
                font-size: 0.8125rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                white-space: nowrap;
            }

            .table td {
                padding: 12px 16px;
                border-bottom: 1px solid var(--border);
                vertical-align: middle;
                font-size: 0.875rem;
            }

            .table tr:last-child td {
                border-bottom: none;
            }

            .table tr:hover {
                background-color: rgba(249, 250, 251, 0.8);
            }

            .text-center {
                text-align: center;
            }

            .text-right {
                text-align: right;
            }

            .text-success {
                color: var(--success);
            }

            .text-danger {
                color: var(--danger);
            }

            .fw-bold {
                font-weight: 600;
            }

            .action-btns {
                display: flex;
                gap: 8px;
                justify-content: flex-end;
            }

            .action-btn {
                display: inline-flex;
                align-items: center;
                justify-content: center;
                width: 32px;
                height: 32px;
                border-radius: 6px;
                background-color: transparent;
                border: none;
                cursor: pointer;
                transition: all 0.2s;
                color: var(--text-light);
            }

            .action-btn:hover {
                background-color: rgba(0, 0, 0, 0.05);
            }

            .action-btn.edit {
                color: var(--info);
            }

            .action-btn.delete {
                color: var(--danger);
            }

            .customer-total-row {
                background-color: #f0fdf4;
                font-weight: 600;
            }

            .customer-total-row td {
                padding: 16px;
            }

            .grand-total-row {
                background-color: #e0e7ff;
                font-weight: 700;
                font-size: 1rem;
            }

            .grand-total-row td {
                padding: 16px;
            }

            .empty-state {
                padding: 48px 20px;
                text-align: center;
                color: var(--text-light);
            }

            .empty-state-icon {
                font-size: 3rem;
                color: #d1d5db;
                margin-bottom: 16px;
                opacity: 0.7;
            }

            .empty-state-title {
                font-size: 1.125rem;
                margin-bottom: 8px;
                color: var(--text-light);
            }

            .empty-state-description {
                font-size: 0.875rem;
                max-width: 400px;
                margin: 0 auto;
            }

            /* Status Badges */
            .status-badge {
                display: inline-block;
                padding: 4px 8px;
                border-radius: 4px;
                font-size: 0.75rem;
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

            .status-active {
                background-color: #d1fae5;
                color: #065f46;
            }

            .status-pending {
                background-color: #fef3c7;
                color: #92400e;
            }

            .customer-total-row {
  background-color: #f8f9fa; /* Light gray background */
  border-top: 2px solid #dee2e6; /* Top border */
}

.customer-total-row td {
  padding: 12px 16px; /* Consistent padding */
}


            @media (max-width: 992px) {
                .container-main {
                    margin-left: 0;
                }
            }
        </style>
    </head>

    <body>
        <div class="container-main">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-users me-2 text-primary"></i>
                    Lent Customer Management
                </h2>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLentModal">
                    <i class="fas fa-plus me-2"></i>Add New
                </button>
            </div>
            <!-- Total Customers Card -->
            <div class="row mb-3">
                <div class="col-md-4 mb-3">
                    <div class="card summary-card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="bg-primary bg-opacity-10 p-3 rounded me-3">
                                    <i class="fas fa-users text-primary fs-4"></i>
                                </div>
                                <div>
                                    <h6 class="text-muted mb-1">Total Customers</h6>
                                    <h4 class="mb-0" id="total-customers">0</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    <div class="card summary-card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="bg-success bg-opacity-10 p-3 rounded me-3">
                                    <i class="fas fa-exchange-alt text-success fs-4"></i>
                                </div>
                                <div>
                                    <h6 class="text-muted mb-1">Total Transactions</h6>
                                    <h4 class="mb-0" id="total-transactions">0</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    <div class="card summary-card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="bg-warning bg-opacity-10 p-3 rounded me-3">
                                    <i class="fas fa-rupee-sign text-warning fs-4"></i>
                                </div>
                                <div>
                                    <h6 class="text-muted mb-1">Total Amount</h6>
                                    <h4 class="mb-0" id="total-amount">₹0</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lent Customers Table -->
            <div class="card shadow-sm">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Customer Records</h5>
                    <div class="input-group" style="width: 300px;">
                        <input type="text" class="form-control" placeholder="Search..." id="searchInput">
                        <button class="btn btn-outline-secondary" type="button">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>

                    <!-- 🔍 Search Functionality Script -->
                    <script>
                        // This script is for the lent_customer table, not dashboard-table
                        document.addEventListener('DOMContentLoaded', function () {
                            const searchInput = document.getElementById('searchInput');
                            searchInput.addEventListener('input', function () {
                                const filter = searchInput.value.toLowerCase();
                                // Select rows from the correct table
                                const rows = document.querySelectorAll('.table tbody tr');

                                rows.forEach(row => {
                                    // Get customer name and mobile from the correct columns
                                    // 2nd column: Customer, 3rd column: Mobile
                                    const name = row.querySelector('td:nth-child(2)')?.textContent.toLowerCase() || '';
                                    const mobile = row.querySelector('td:nth-child(3)')?.textContent.toLowerCase() || '';
                                    // Optionally, also search by date (5th column)
                                    const date = row.querySelector('td:nth-child(5)')?.textContent.toLowerCase() || '';

                                    const match =
                                        name.includes(filter) ||
                                        mobile.includes(filter) ||
                                        date.includes(filter);

                                    row.style.display = match ? '' : 'none';
                                });
                            });
                        });
                    </script>
                </div>
                <div class="card-body">
                    <div class="table-responsive">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Customer</th>
                                    <th>Mobile</th>
                                    <th class="text-right">Amount</th>
                                    <th>Date</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (Array.isArray(lentBills) && lentBills.length> 0) {
                                    let lastName = null;
                                    let customerTotal = 0;
                                    let rowNum = 1;
                                    let grandTotal = 0;
                                    lentBills.forEach((bill, index) => {
                                    const isNewCustomer = bill.customer_name !== lastName;
                                    const isLast = index === lentBills.length - 1 || lentBills[index + 1].customer_name
                                    !== bill.customer_name;
                                    if (isNewCustomer) customerTotal = 0;
                                    customerTotal += Number(bill.Total) || 0;
                                    grandTotal += Number(bill.Total) || 0;
                                    const { date, time } = formatDate(bill.created_at);
                                    %>
                                    <tr>
                                        <td>
                                            <%= rowNum++ %>
                                        </td>
                                        <td class="<%= isNewCustomer ? 'fw-bold' : '' %>"
                                            style="color:rgb(245, 71, 178);">
                                            <%= isNewCustomer ? bill.customer_name : '' %>
                                        </td>
                                        <td class="<%= isNewCustomer ? 'fw-bold' : '' %>">
                                            <%= isNewCustomer ? bill.mobile : '' %>
                                        </td>
                                        <td class="text-right">
                                            <%= formatRupee(bill.Total) %>
                                        </td>
                                        <td>
                                            <%= date %>
                                                <span style="color: var(--text-light); font-size: 0.8em;">
                                                    <%= time %>
                                                </span>
                                        </td>
                                        <td>
                                            <div class="action-btns">
                                                <!-- Edit Button (opens modal instead of redirect) -->
                                                <button class="btn btn-sm btn-primary" data-bs-toggle="modal"
                                                    data-bs-target="#editLentModal"
                                                    onclick="fillEditModal('<%= bill.id %>', '<%= bill.customer_name %>', '<%= bill.mobile %>', '<%= bill.amount %>')">
                                                    <i class="fas fa-edit"></i>
                                                </button>


                                                <button class="btn btn-sm btn-danger" data-bs-toggle="modal"
                                                    data-bs-target="#deleteLentModal"
                                                    onclick="fillDeleteModal('<%= bill.id %>', '<%= bill.customer_name %>')">
                                                    <i class="fas fa-trash"></i>
                                                </button>

                                            </div>

                                        </td>
                                    </tr>
                                    <% if (isLast) { %>
                                        <!-- <tr class="customer-total-row">
                                            <td colspan="3" class="text-right">Total for <span
                                                    style="color:rgb(245, 71, 178);">
                                                    <%= bill.customer_name %>:
                                                </span></td>
                                            <td class="text-right fw-bold" style="color:rgb(252, 9, 9);">
                                                <%= formatRupee(customerTotal) %>
                                            </td>
                                            
                                            <td colspan="2"></td>
                                        </tr> -->

                                        <tr class="customer-total-row">
                                            <td colspan="3" class="text-right">
                                              Total for <span style="color:rgb(245, 71, 178); font-weight: bold;">
                                                <%= bill.customer_name %>:
                                              </span>
                                            </td>
                                            <td class="text-right" style="color:rgb(252, 9, 9); font-weight: bold;">
                                              <%= formatRupee(customerTotal) %>
                                            </td>
                                            <td colspan="2"></td>
                                          </tr>
                                        <% } %>
                                            <% lastName=bill.customer_name; }); %>
                                                <tr class="grand-total-row">
                                                    <td colspan="3" class="text-right">GRAND TOTAL:</td>
                                                    <td class="text-right fw-bold">
                                                        <%= formatRupee(grandTotal) %>
                                                    </td>
                                                    <td colspan="2"></td>
                                                </tr>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="6" class="empty-state">
                                                            <div class="empty-state-icon">
                                                                <i class="fas fa-info-circle"></i>
                                                            </div>
                                                            <h3 class="empty-state-title">No records found</h3>
                                                            <p class="empty-state-description">
                                                                No lent customer transactions have been recorded yet.
                                                                Add your first transaction above.
                                                            </p>
                                                        </td>
                                                    </tr>
                                                    <% } %>
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>

        <!-- Add Lent Modal -->
        <div class="modal fade" id="addLentModal" tabindex="-1" aria-labelledby="addLentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="/lent_customer" method="POST">
                        <div class="modal-header bg-primary text-white">
                            <h5 class="modal-title" id="addLentModalLabel">
                                <i class="fas fa-user-plus me-2"></i>Add Lent Customer
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="addName" class="form-label">Customer Name</label>
                                <input type="text" class="form-control" id="addName" name="customer_name" required>
                            </div>
                            <div class="mb-3">
                                <label for="addMobile" class="form-label">Mobile Number</label>
                                <input type="tel" class="form-control" id="addMobile" name="mobile" required>
                            </div>
                            <div class="mb-3">
                                <label for="addAmount" class="form-label">Amount</label>
                                <input type="number" class="form-control" id="addAmount" name="Total" required>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Customer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <!-- Edit Lent Customer Modal -->
        <div class="modal fade" id="editLentModal" tabindex="-1" aria-labelledby="editLentModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="/lent_customer/edit" method="POST">
                        <input type="hidden" name="id" id="edit-id">

                        <div class="modal-header bg-primary text-white">
                            <h5 class="modal-title" id="editLentModalLabel">Edit Customer</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="edit-customer-name" class="form-label">Customer Name</label>
                                <input type="text" class="form-control" id="edit-customer-name" name="customer_name"
                                    required>
                            </div>

                            <div class="mb-3">
                                <label for="edit-mobile" class="form-label">Mobile</label>
                                <input type="text" class="form-control" id="edit-mobile" name="mobile" required>
                            </div>

                            <div class="mb-3">
                                <label for="edit-amount" class="form-label">Amount</label>
                                <input type="number" class="form-control" id="edit-amount" name="Total" required>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <!-- Delete Confirmation Modal -->
        <div class="modal fade" id="deleteLentModal" tabindex="-1" aria-labelledby="deleteLentModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="/lent_customer/delete" method="POST">
                        <input type="hidden" name="id" id="delete-id">

                        <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title" id="deleteLentModalLabel">Confirm Delete</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <p>Are you sure you want to delete this customer record?</p>
                            <p><strong id="delete-customer-name"></strong></p>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <!-- Lent Alert Modal -->
        <div class="modal fade" id="lentAlertModal" tabindex="-1" aria-labelledby="lentAlertModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="/lent_customers/set-alert" method="POST">
                        <input type="hidden" id="alertCustomerId" name="customer_id">
                        <div class="modal-header bg-warning text-white">
                            <h5 class="modal-title" id="lentAlertModalLabel">
                                <i class="fas fa-bell me-2"></i>Set Payment Reminder
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label class="form-label">Customer Name</label>
                                <input type="text" class="form-control" id="alertCustomerName" readonly>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Mobile Number</label>
                                <input type="text" class="form-control" id="alertCustomerMobile" readonly>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Amount Due</label>
                                <input type="text" class="form-control" id="alertCustomerAmount" readonly>
                            </div>
                            <div class="mb-3">
                                <label for="alertDueDate" class="form-label">Due Date *</label>
                                <input type="date" class="form-control" id="alertDueDate" name="due_date" required>
                            </div>
                            <div class="mb-3">
                                <label for="alertPriority" class="form-label">Priority</label>
                                <select class="form-select" id="alertPriority" name="priority">
                                    <option value="low">Low</option>
                                    <option value="medium" selected>Medium</option>
                                    <option value="high">High</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="alertNotes" class="form-label">Reminder Notes</label>
                                <textarea class="form-control" id="alertNotes" name="notes" rows="3"
                                    placeholder="Add any specific notes for this reminder..."></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-warning text-white">
                                <i class="fas fa-bell me-2"></i>Set Reminder
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <script>
            // Initialize edit modal
            function fillEditModal(id, name, mobile, amount) {
                document.getElementById("edit-id").value = id;
                document.getElementById("edit-customer-name").value = name;
                document.getElementById("edit-mobile").value = mobile;
                document.getElementById("edit-amount").value = amount;
            }



            // Initialize delete modal

            function fillDeleteModal(id, name) {
                document.getElementById("delete-id").value = id;
                document.getElementById("delete-customer-name").innerText = name;
            }

            // Initialize alert modal
            const alertModal = document.getElementById('lentAlertModal');
            if (alertModal) {
                alertModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    document.getElementById('alertCustomerId').value = button.getAttribute('data-id');
                    document.getElementById('alertCustomerName').value = button.getAttribute('data-name');
                    document.getElementById('alertCustomerMobile').value = button.getAttribute('data-mobile');
                    document.getElementById('alertCustomerAmount').value = '₹' + parseFloat(button.getAttribute('data-amount')).toLocaleString('en-IN');

                    // Set default due date to 7 days from now
                    const today = new Date();
                    const nextWeek = new Date(today);
                    nextWeek.setDate(today.getDate() + 7);
                    document.getElementById('alertDueDate').value = nextWeek.toISOString().split('T')[0];
                });
            }

            // Search functionality
            document.getElementById('searchInput').addEventListener('input', function () {
                const filter = this.value.toLowerCase();
                const rows = document.querySelectorAll('tbody tr');

                rows.forEach(row => {
                    const name = row.querySelector('.customer-name').textContent.toLowerCase();
                    const mobile = row.cells[2].textContent.toLowerCase();
                    const shouldShow = name.includes(filter) || mobile.includes(filter);
                    row.style.display = shouldShow ? '' : 'none';
                });
            });




        </script>



        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Get all transaction rows (excluding summary rows)
                const transactionRows = document.querySelectorAll('tbody tr:not(.customer-total-row):not(.grand-total-row)');

                // Calculate Total Customers (unique names)
                const customerNames = new Set();

                // Calculate Total Amount
                let totalAmount = 0;

                transactionRows.forEach(row => {
                    // Get customer name from 2nd column
                    const nameCell = row.querySelector('td:nth-child(2)');
                    if (nameCell && nameCell.textContent.trim()) {
                        customerNames.add(nameCell.textContent.trim());
                    }

                    // Get amount from 4th column (₹ symbol is handled)
                    const amountCell = row.querySelector('td:nth-child(4)');
                    if (amountCell) {
                        const amountText = amountCell.textContent.replace(/[^0-9.-]/g, '');
                        const amount = parseFloat(amountText) || 0;
                        totalAmount += amount;
                    }
                });

                // Update the UI
                document.getElementById('total-customers').textContent = customerNames.size;
                document.getElementById('total-transactions').textContent = transactionRows.length;
                document.getElementById('total-amount').textContent = '₹' + totalAmount.toLocaleString('en-IN');
            });
        </script>


<!--         
<script>
    document.addEventListener('DOMContentLoaded', function() {
      function groupCustomerTransactions() {
        const table = document.querySelector('table');
        const rows = Array.from(table.querySelectorAll('tbody tr'));
        const customers = {};
        
        // Identify all customer rows and their transactions
        let currentCustomer = null;
        
        rows.forEach(row => {
          // Skip total rows (they'll be handled separately)
          if (row.textContent.includes('Total for') || row.textContent.includes('GRAND TOTAL')) {
            return;
          }
          
          const cells = row.querySelectorAll('td');
          if (cells.length >= 6) { // Assuming 6 columns as per your table
            const customerName = cells[1].textContent.trim();
            
            if (customerName) {
              currentCustomer = customerName;
              if (!customers[currentCustomer]) {
                customers[currentCustomer] = {
                  firstRow: row,
                  transactions: []
                };
              }
            }
            
            if (currentCustomer) {
              customers[currentCustomer].transactions.push(row);
            }
          }
        });
        
        // Rebuild the table with grouped transactions
        const tbody = table.querySelector('tbody');
        tbody.innerHTML = ''; // Clear existing rows
        
        // Add customer groups in original order
        Object.entries(customers).forEach(([customer, data]) => {
          // Add first transaction (with customer name)
          tbody.appendChild(data.firstRow);
          
          // Add subsequent transactions (without customer name)
          for (let i = 1; i < data.transactions.length; i++) {
            const row = data.transactions[i];
            const cells = row.querySelectorAll('td');
            cells[1].textContent = ''; // Clear customer name
            cells[1].style.padding = '12px 16px'; // Maintain spacing
            tbody.appendChild(row);
          }
          
          // Add customer total row if it exists in original data
          const customerTotalRow = rows.find(r => 
            r.textContent.includes(`Total for ${customer}:`)
          );
          if (customerTotalRow) tbody.appendChild(customerTotalRow);
        });
        
        // Add grand total at the end if it exists
        const grandTotalRow = rows.find(r => 
          r.textContent.includes('GRAND TOTAL:')
        );
        if (grandTotalRow) tbody.appendChild(grandTotalRow);
      }
      
      // Run initially
      groupCustomerTransactions();
      
      // Set up MutationObserver to handle dynamic changes
      const observer = new MutationObserver(groupCustomerTransactions);
      observer.observe(document.querySelector('table tbody'), {
        childList: true,
        subtree: true
      });
    });
    </script>
    
    <style>
    /* Style to maintain consistent column widths */
    table tbody tr td:nth-child(2) {
      min-width: 120px;
      font-weight: bold;
    }
    
    /* Style for total rows */
    tr:has(td:contains("Total for")) {
      background-color: #f5f5f5;
      font-weight: bold;
    }
    
    tr:has(td:contains("GRAND TOTAL")) {
      background-color: #e0e0e0;
      font-weight: bold;
    }
    </style> -->


    <script>
        document.addEventListener('DOMContentLoaded', function() {
  function formatRupee(amount) {
    return '₹' + parseFloat(amount).toFixed(2);
  }

  function calculateAndInsertTotals() {
    const table = document.querySelector('table');
    if (!table) return;
    
    const rows = Array.from(table.querySelectorAll('tbody tr'));
    const customers = {};
    let grandTotal = 0;

    // First pass: Calculate totals
    let currentCustomer = null;
    rows.forEach(row => {
      // Skip existing total rows and empty rows
      if (row.textContent.includes('Total for') || 
          row.textContent.includes('GRAND TOTAL') ||
          row.textContent.trim() === '') {
        return;
      }

      const cells = row.querySelectorAll('td');
      if (cells.length >= 5) { // Adjust for your column count
        const customerName = cells[1]?.textContent.trim();
        
        // Update current customer if name exists
        if (customerName) {
          currentCustomer = customerName;
          if (!customers[currentCustomer]) {
            customers[currentCustomer] = { amount: 0, rows: [] };
          }
        }

        // Add to customer total
        if (currentCustomer) {
          const amountText = cells[3]?.textContent.replace(/[^\d.-]/g, '') || '0';
          const amount = parseFloat(amountText);
          customers[currentCustomer].amount += amount;
          customers[currentCustomer].rows.push(row);
          grandTotal += amount;
        }
      }
    });

    // Second pass: Rebuild table with totals
    const tbody = table.querySelector('tbody');
    if (!tbody) return;
    tbody.innerHTML = '';

    // Add customer rows with their totals
    Object.entries(customers).forEach(([name, data]) => {
      // Add all transactions for this customer
      data.rows.forEach((row, index) => {
        const cells = row.querySelectorAll('td');
        // Only show customer name in first row
        if (index === 0) {
          cells[1].style.fontWeight = 'bold';
          cells[1].style.color = 'rgb(245, 71, 178)';
        } else {
          cells[1].textContent = '';
          cells[1].style.padding = '12px 16px';
        }
        tbody.appendChild(row.cloneNode(true));
      });

      // Add customer total row
      const totalRow = document.createElement('tr');
      totalRow.className = 'customer-total-row';
      totalRow.innerHTML = `
        <td colspan="2" class="text-right">
          Total for <span style="color:rgb(245, 71, 178); font-weight:bold;">${name}:</span>
        </td>
        <td class="text-right fw-bold" style="color:rgb(252, 9, 9);">
          ${formatRupee(data.amount)}
        </td>
        <td colspan="2"></td>
      `;
      tbody.appendChild(totalRow);
    });

    // Add grand total
    const grandTotalRow = document.createElement('tr');
    grandTotalRow.className = 'grand-total-row';
    grandTotalRow.innerHTML = `
      <td colspan="2" class="text-right fw-bold">GRAND TOTAL:</td>
      <td class="text-right fw-bold">${formatRupee(grandTotal)}</td>
      <td colspan="2"></td>
    `;
    tbody.appendChild(grandTotalRow);
  }

  // Run initially
  calculateAndInsertTotals();

  // Set up MutationObserver to handle dynamic changes
  const observer = new MutationObserver(function(mutations) {
    let needsUpdate = false;
    mutations.forEach(mutation => {
      if (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0) {
        needsUpdate = true;
      }
    });
    if (needsUpdate) calculateAndInsertTotals();
  });

  const tbody = document.querySelector('table tbody');
  if (tbody) {
    observer.observe(tbody, {
      childList: true,
      subtree: true
    });
  }
});
    </script>


    </body>

    </html>
    <%- include('footer.ejs') %>


